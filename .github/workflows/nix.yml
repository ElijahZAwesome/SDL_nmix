name: CMake *nix platforms

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    # Matrix config for all supported platforms
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout SDL_sound repository
      uses: actions/checkout@v2
      with:
        repository: 'ElijahZAwesome/SDL_sound'
        path: 'SDL_sound'
    
    - name: Install SDL2 (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && sudo apt-get install -y libsdl2-dev cmake
    - name: Install SDL2 (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install sdl2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/SDL_sound/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/SDL_sound/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSDLSOUND_DECODER_COREAUDIO=ON -DCMAKE_MODULE_PATH=../scripts ..

    - name: Build / Install SDL_sound
      working-directory: ${{github.workspace}}/SDL_sound/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: sudo cmake --build . --config $BUILD_TYPE --target install
    
    # Actually build
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSOUND_LIBRARY="${{github.workspace}}/SDL_sound/build/libSDL2_sound.a" -DSOUND_INCLUDE_DIR="${{github.workspace}}/SDL_sound" -DNMIX_BUILD_SHARED=ON -DNMIX_BUILD_STATIC=ON ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: SDL_gpu-${{matrix.os}}
        path: ${{github.workspace}}/build
